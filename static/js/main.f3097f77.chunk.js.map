{"version":3,"sources":["components/Setup.js","actions/fetchQuestions.js","actions/types.js","components/Question.js","actions/scoreAction.js","components/Quiz.js","components/history.js","App.js","reducers/questionsReducer.js","reducers/index.js","reducers/scoreReducer.js","index.js"],"names":["Setup","state","num","category","dificulty","onSelectCategory","event","_this","setState","target","value","onSelectDificulty","onChange","e","Object","defineProperty","name","onSubmit","preventDefault","userData","props","fetchQuestions","history","push","react_default","a","createElement","className","this","type","Component","connect","data","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","axios","get","params","amount","sent","payload","stop","_x","apply","arguments","Question","question_title","correct_answer","score","answers","handleCheck","selectedAnswer","currentTarget","dataset","id","click","scoreAction","console","log","question","shuffle","arra1","temp","index","ctr","length","Math","floor","random","myArray","concat","toConsumableArray","incorrect_answers","_this2","map","answer","key","onClick","data-id","Quiz","numOfQuestions","currentQuestionNum","questions","incrementIndex","nextQuestionOnClick","components_Question","getScore","results","createBrowserHistory","App","react_router_dom","react_router","exact","path","component","initialState","combineReducers","undefined","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f3097f77.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n//action creator for fetch\r\nimport {fetchQuestions} from '../actions/fetchQuestions';\r\nimport {connect} from 'react-redux';\r\n\r\n class Setup extends Component {\r\n     state={  \r\n         num:10,\r\n         category:'',\r\n         dificulty:''\r\n   \r\n     }\r\n\r\nonSelectCategory  = (event) => {\r\n    this.setState({ category: event.target.value });\r\n  }\r\n  onSelectDificulty  = (event) => {\r\n    this.setState({ dificulty: event.target.value });\r\n  }\r\n \r\n//On Form Change\r\n     onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n\r\n    //Form on submit\r\n      onSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n           num: this.state.num,\r\n            category:this.state.category,\r\n            dificulty:this.state.dificulty\r\n          };\r\n       this.props.fetchQuestions(userData); \r\n       this.props.history.push('/quiz');\r\n      }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"setup\">\r\n        <form onSubmit={this.onSubmit}  className=\"setup-form\">\r\n        <label>\r\n            Number of questions:\r\n        </label>\r\n        <input type=\"text\" name=\"num\"  value={this.state.num} onChange={this.onChange} />\r\n     <label>\r\n     Category:\r\n     </label>\r\n        <select  onChange={this.onSelectCategory} >\r\n        <option value=\"\">All</option>\r\n            <option value=\"9\">General Knowlege</option>\r\n            <option value=\"10\">Entertaiment: Books</option>\r\n            <option value=\"11\">Entertaiment: Film</option>\r\n            <option value=\"12\">Entertaiment: Music</option>\r\n            <option value=\"13\">Entertaiment: Musicals & Theaters</option>\r\n            <option value=\"14\">Entertaiment: Televison</option>\r\n            <option value=\"15\">Entertaiment: Video Games</option>\r\n            <option value=\"16\">Entertaiment: Board Games</option>\r\n            <option value=\"17\">Science & Nature</option>\r\n            <option value=\"18\">Science: Computers</option>\r\n            <option value=\"19\">Science:Mathematics</option>\r\n            <option value=\"20\">Mythology</option>\r\n            <option value=\"21\">Sports</option>\r\n            <option value=\"22\">Geography</option>\r\n            <option value=\"23\">History</option>\r\n            <option value=\"24\">Politics</option>\r\n            <option value=\"25\">Art</option>\r\n            <option value=\"26\">Celebrities</option>\r\n            <option value=\"27\">Animals</option>\r\n            <option value=\"28\">Vehicles</option>\r\n            <option value=\"29\">Entertaiment:Comics</option>\r\n            <option value=\"30\">Science: Gadgets</option>\r\n            <option value=\"31\">Entertaiment: Japanese Anime & Manga</option>\r\n            <option value=\"32\">Entertaiment: Cartoon & Animations</option>\r\n        </select>\r\n\r\n     \r\n     <label>\r\n     Dificulty:\r\n     </label>\r\n        <select  onChange={this.onSelectDificulty} >\r\n             <option value=\"\">Any</option>\r\n            <option value=\"easy\">Easy</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"hard\">Hard</option>      \r\n        </select>\r\n      \r\n        <input className=\"submit-button\" type=\"submit\" value=\"Submit\" />\r\n  </form>\r\n      </div>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(null,{fetchQuestions})(Setup);","import axios from 'axios';\r\nimport {FETCH_QUESTIONS} from './types';\r\n\r\nexport const fetchQuestions = (data) => async dispatch => {\r\n   \r\n\r\n    const response =  await axios.get(`https://opentdb.com/api.php`,\r\n    {params:\r\n        {amount:data.num,\r\n         category:data.category,\r\n         dificulty:data.dificulty   \r\n        \r\n        }});\r\n       \r\n\r\n    dispatch({  type:FETCH_QUESTIONS, payload:response.data });\r\n \r\n    };\r\n","export const FETCH_QUESTIONS = 'FETCH_QUESTIONS';\r\nexport const GET_SCORE = 'GET_SCORE';","import React, { Component } from 'react'\r\nimport {scoreAction} from '../actions/scoreAction';\r\nimport {connect} from 'react-redux';\r\n\r\n class Question extends Component {\r\n     state={\r\n        question_title:'',\r\n        correct_answer:'',\r\n        score:0,\r\n        answers:[]\r\n     };\r\n\r\n// WHEN RECEVE PROPS UPDATE STATE \r\nUNSAFE_componentWillReceiveProps(props){\r\n\r\nconsole.log('QUESTION RECIVED ', props.question )\r\n\r\n//GET ANSVERS AND RANDOMISE THEM TO ARRAY\r\n\r\nif(props){\r\n\r\n    function shuffle(arra1) {\r\n    let ctr = arra1.length;\r\n    let temp;\r\n    let index;\r\n\r\n    // While there are elements in the array\r\n    while (ctr > 0) {\r\n    // Pick a random index\r\n        index = Math.floor(Math.random() * ctr);\r\n    // Decrease ctr by 1\r\n        ctr--;\r\n    // And swap the last element with it\r\n        temp = arra1[ctr];\r\n        arra1[ctr] = arra1[index];\r\n        arra1[index] = temp;\r\n    }\r\n    return arra1;\r\n    }\r\n    let myArray = [...props.question.incorrect_answers,props.question.correct_answer];\r\n     this.setState({\r\n        question_title:props.question.question,\r\n        correct_answer:props.question.correct_answer,\r\n        answers:shuffle(myArray)});\r\n    console.log(shuffle(this.state.answers));\r\n\r\n    }//if\r\n}//will recive\r\n\r\n\r\n\r\nhandleCheck =(e)=> {\r\n    let selectedAnswer = e.currentTarget.dataset.id;\r\n    //console.log( e.currentTarget.dataset.id )\r\n    //Increment question\r\n     this.props.click();\r\n    //Return score\r\n this.props.scoreAction(this.state.score);\r\n\r\n    //Ako je selektovani Odgovor[id] isti kao tacan odg\r\nif(this.state.answers[selectedAnswer] === this.state.correct_answer){\r\n    this.setState({score:this.state.score +1})\r\n   \r\n    console.log('CORRECT!!!!!')\r\n}else{\r\n    console.log('SRY INCORRECT')\r\n}   \r\n}\r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"question\">\r\n        {/* DO A MAP OVER ANSWERS ARRAY */}\r\n        {this.state.question_title}\r\n       {  this.state.answers.map((answer,index) =>{\r\n         return   <li key={index} onClick={this.handleCheck} data-id={index}> <p>{answer} </p></li> })     \r\n        } \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null,{scoreAction})(Question);\r\n\r\n","import {GET_SCORE} from './types';\r\n\r\nexport const scoreAction = (data) => {\r\n\r\n    return{\r\n        type:GET_SCORE,\r\n        payload:data\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport Question from './Question';\r\n\r\n class Quiz extends Component {\r\nstate={\r\nnumOfQuestions:null,\r\ncurrentQuestionNum:0,\r\nquestions:[],\r\nindex :true,\r\nscore:0\r\n\r\n}\r\n \r\n// WHEN RECEVE PROPS UPDATE STATE \r\nUNSAFE_componentWillReceiveProps(props){\r\n\r\nthis.setState({numOfQuestions:props.questions.length});\r\nthis.setState({questions:props.questions}) \r\n}\r\n//Increment current question \r\nincrementIndex=()=>{\r\n  if(this.state.currentQuestionNum < this.state.numOfQuestions -1){ // -1\r\n    this.setState({currentQuestionNum:this.state.currentQuestionNum +1}) ;\r\n  }\r\n else{\r\n   //Kad zavrsi inkrementaciju niza setuj na false i to ce pokrene logiku da renderuje score\r\n   this.setState({index:false})\r\n\r\n }\r\n}\r\nnextQuestionOnClick=()=>{\r\n  return this.state.questions[this.state.currentQuestionNum];\r\n\r\n}\r\n\r\n  render() {\r\n\r\n  \r\n    return (\r\n      <div className=\"quiz\">\r\n     {/* Display how many questions are there */}\r\n     {this.state.numOfQuestions?`${this.state.currentQuestionNum +1} / ${this.state.numOfQuestions}`:null} \r\n\r\n              {/* <Question question={this.nextQuestionOnClick()} click={this.incrementIndex} /> */}\r\n     { this.state.index  ?  <Question question={this.nextQuestionOnClick()} click={this.incrementIndex} getScore={this.getScore}/>: <div className=\"score\"> SCORE:{this.props.score}</div> } \r\n\r\n      </div>\r\n )\r\n }\r\n } \r\n const mapStateToProps =(state)=>{\r\n  //  console.log(state.score)\r\n return {questions:state.questions.results,\r\n          score:state.score}\r\n\r\n };\r\n\r\nexport default connect(mapStateToProps,{}) (Quiz);\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport Setup from './components/Setup';\r\nimport Quiz from './components/Quiz';\r\nimport { HashRouter as Router, Route\r\n} from 'react-router-dom';\r\nimport history from './components/history';\r\nfunction App() {\r\n  return (\r\n  <Router history={history}>\r\n    <div className=\"container\">\r\n    <Route exact path=\"/\" component={Setup} />\r\n    <Route exact path=\"/quiz\" component={Quiz} />\r\n    </div>\r\n  </Router>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import {FETCH_QUESTIONS} from '../actions/types';\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUESTIONS:\r\n        return  action.payload\r\n            \r\n         \r\n         default:\r\n         return state; \r\n        }\r\n    } \r\n    ","import { combineReducers } from 'redux';\r\n\r\nimport questionsReducer from './questionsReducer';\r\nimport {scoreReducer} from './scoreReducer';\r\n\r\n\r\nexport default combineReducers({\r\n  questions:questionsReducer,\r\n  score:scoreReducer\r\n \r\n});","import {GET_SCORE} from '../actions/types';\r\n\r\nexport const scoreReducer=(state=0,action)=>{\r\n    switch(action.type){\r\n        case GET_SCORE:\r\n        return action.payload\r\n\r\n        default:\r\n        return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/index.scss';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport  rootReducer from './reducers'\r\nconst initialState = {};\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(\r\n applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n <App />\r\n</Provider>,\r\n document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}